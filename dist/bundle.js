!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.dot=e():t.dot=e()}(self,(function(){return(()=>{"use strict";var t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Keyboard:()=>SA,Note:()=>CA,chain:()=>F,default:()=>kA,getNoteFrequency:()=>q});var n={};function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}t.r(n),t.d(n,{BufferSource:()=>Lo,ChannelMerger:()=>jt,ChannelSplitter:()=>Kt,Chorus:()=>wn,Compressor:()=>Lt,ConstantSource:()=>y,Convolver:()=>oe,Delay:()=>ye,Distortion:()=>Mn,EQ2:()=>Vn,Envelope:()=>C,FMSynth:()=>Xr,FeedbackDelay:()=>_n,Filter:()=>_,FilterEnvelope:()=>ut,Flanger:()=>ur,Gain:()=>mt,GainEnvelope:()=>Qt,LFO:()=>sn,Limiter:()=>We,MonoSynth:()=>bo,NoiseGenerator:()=>cA,Osc:()=>Tr,Oscillator:()=>tn,PingPongDelay:()=>mr,PolySynth:()=>Qo,Reverb:()=>Dr,SignalGenerator:()=>hA,SimpleFMSynth:()=>Ko,StereoPanner:()=>Ce,Synth:()=>io,WaveShaper:()=>Be});const o=function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.getName=function(){return n.name},this.getParams=function(){return n.params},this.connect=function(t,e,r){return n._connect(t,e,r)},this.disconnect=function(t,e,r){return n._disconnect(t,e,r)},this._connect=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(Array.isArray(e))e.forEach((function(t){return n.connect(t)}));else if(e instanceof t){if(!e.hasOwnProperty("getInputs"))return void console.error("Cannot connect to a node with no inputs");var A=e._getInputNodes();A.forEach((function(t){n.getOutputs().forEach((function(e){return e.connect(t,r,o)}))}))}else e instanceof AudioNode?n.getOutputs().forEach((function(t){return t.connect(e,r,o)})):e instanceof AudioParam?n.getOutputs().forEach((function(t){return t.connect(e)})):console.error("Invalid destination type")},this._disconnect=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(Array.isArray(e))e.forEach((function(t){return n.disconnect(t)}));else if(e instanceof t){if(!e.hasOwnProperty("getInputs"))return void console.error("Cannot disconnect from destination provided");var A=e._getInputNodes();A.forEach((function(t){n.getOutputs().forEach((function(e){return e.disconnect(t,r,o)}))}))}else e instanceof AudioNode?n.getOutputs().forEach((function(t){return t.disconnect(e,r,o)})):n.getOutputs().forEach((function(t){return t.disconnect(e)}))},this._getInputNodes=function(){return n.getInputs().reduce((function(e,n){return n instanceof t?e.push.apply(e,function(t){if(Array.isArray(t))return r(t)}(o=n._getInputNodes())||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(o)||function(t,e){if(t){if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()):e.push(n),e;var o}),[])},this._timeUpdate=function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;r?t.setTargetAtTime(e,n.AC.currentTime,r):t.setValueAtTime(e,n.AC.currentTime)},this._linearFadeUpdate=function(t,e,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;n._timeUpdate(t,1-r,o),n._timeUpdate(e,r,o)},this._equalPowerFadeUpdate=function(t,e,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;n._timeUpdate(t,Math.cos(.5*r*Math.PI),o),n._timeUpdate(e,Math.cos(.5*(1-r)*Math.PI),o)},this._dryWetUpdate=function(t,e,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;r<.5?(n._timeUpdate(t,1,o),n._timeUpdate(e,2*r,o)):(n._timeUpdate(t,1-2*(r-.5),o),n._timeUpdate(e,1,o))},this.AC=e,this.name="Node"};function A(t){return(A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(Object(n),!0).forEach((function(e){u(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function s(t,e){return!e||"object"!==A(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function l(t){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var p={offset:1,start:!1};const y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=l(e);if(n){var o=l(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return s(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};a(this,o),(e=r.call(this,t)).start=function(){return e.source.start()},e.stop=function(){return e.source.stop()},e.getOutputs=function(){return[e.source]},e.getOffset=function(){return e.params.offset},e.setOffset=function(t,n){return e._timeUpdate(e.params.offset,t,n)},e.name="ConstantSource",e.source=e.AC.createConstantSource(),e.params={offset:e.source.offset};var A=i(i({},p),n);return e.setOffset(A.offset),A.start&&e.start(),e}return o}(o);function g(t){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function b(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){m(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function m(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function E(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function O(t,e){return(O=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function w(t,e){return!e||"object"!==g(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function S(t){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var I={attack:0,decay:0,sustain:1,release:0,modifier:1};const C=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&O(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=S(e);if(n){var o=S(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return w(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};E(this,o),(e=r.call(this,t)).getOutputs=function(){return[e.source]},e.getAttack=function(){return e.attack},e.getDecay=function(){return e.decay},e.getSustain=function(){return e.sustain},e.getRelease=function(){return e.release},e.getModifier=function(){return e.modifier},e.setAttack=function(t){return e.attack=t},e.setDecay=function(t){return e.decay=t},e.setSustain=function(t){return e.sustain=t},e.setRelease=function(t){return e.release=t},e.setModifier=function(t){return e.modifier=t},e.connect=function(t){!t instanceof AudioParam?console.error("Envelopes must be connected to an AudioParam"):e._connect(t)},e.triggerAttack=function(){e._clearTimeouts();var t=e.sustain*e.modifier;if(e.attack){e.source.setOffset(0),e.source.setOffset(e.modifier,e.attack);var n=setTimeout((function(){e.source.setOffset(t,e.decay)}),1e3*e.attack);e.timeoutIds.push(n)}else e.decay?(e.source.setOffset(e.modifier),e.source.setOffset(t,e.decay)):e.sustain&&e.source.setOffset(t)},e.triggerRelease=function(){e._clearTimeouts(),e.source.setOffset(0,e.release)},e.triggerStop=function(){e._clearTimeouts(),e.source.setOffset(0)},e._clearTimeouts=function(){return e.timeoutIds.forEach((function(t){return clearTimeout(t)}))},e.name="Envelope",e.source=new y(e.AC,{start:!0}),e.timeoutIds=[],e.attack=0,e.decay=0,e.sustain=1,e.release=0,e.modifier=1,e.params={};var A=b(b({},I),n);return e.setAttack(A.attack),e.setDecay(A.decay),e.setSustain(A.sustain),e.setRelease(A.release),e.setModifier(A.modifier),e.source.setOffset(0),e}return o}(o);var k=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],d=["none","2x","4x"],v=["white","pink","brown"],Q=["sine","triangle","square","sawtooth"],D=["lowpass","highpass","bandpass","allpass","notch","peaking","lowshelf","highshelf"],R=function(t,e,n){return Math.min(n,Math.max(e,t))},F=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];if(!(e.length<2))for(var r=0;r<e.length-1;r++)e[r].connect(e[r+1])},M={12:"C",13:"C#",14:"D",15:"D#",16:"E",17:"F",18:"F#",19:"G",20:"G#",21:"A",22:"A#",23:"B"},j={C:261.63,"C#":277.18,D:293.66,"D#":311.13,E:329.63,F:349.23,"F#":369.99,G:392,"G#":415.3,A:440,"A#":466.16,B:493.88},B={a:12,w:13,s:14,e:15,d:16,f:17,t:18,g:19,y:20,h:21,u:22,j:23,k:24,o:25,l:26,p:27,";":28},P=/^(?![ebEB]#)([a-gA-G]#?)([0-9])$/,J=function(t){var e=t.match(P);if(e)return{note:e[1].toUpperCase(),octave:parseInt(e[2])}},G=function(t){var e=J(t);if(e)return{note:e.note,octave:e.octave,frequency:q(t),midi:U(t)}},K=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=B[t]+12*e;return G(T(n))},T=function(t){for(var e=R(t,12,120),n=0;e>23;)e-=12,n++;return"".concat(M[e]).concat(n)},U=function(t){var e=J(t);return e?k.indexOf(e.note)+12*(e.octave+1):null},q=function(t){var e=J(t);return e?j[e.note]*Math.pow(2,e.octave-4):null},V=function(t){for(var e=atob(t),n=e.length,r=new Uint8Array(n),o=0;o<n;o++)r[o]=e.charCodeAt(o);return r.buffer};function Y(t){return(Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function W(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Z(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?W(Object(n),!0).forEach((function(e){N(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):W(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function N(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function x(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function L(t,e){return(L=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function H(t,e){return!e||"object"!==Y(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function z(t){return(z=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var X={frequency:11e3,q:0,detune:0,gain:0,type:"lowpass"};const _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&L(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=z(e);if(n){var o=z(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return H(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};x(this,o),(e=r.call(this,t)).getInputs=function(){return[e.filter]},e.getOutputs=function(){return[e.filter]},e.getFrequency=function(){return e.params.frequency.value},e.getQ=function(){return e.params.Q.value},e.getGain=function(){return e.params.gain.value},e.getDetune=function(){return e.params.detune.value},e.getType=function(){return e.filter.type},e.setFrequency=function(t,n){return e._timeUpdate(e.params.frequency,t,n)},e.setQ=function(t,n){return e._timeUpdate(e.params.frequency,t,n)},e.setGain=function(t,n){return e._timeUpdate(e.params.gain,t,n)},e.setDetune=function(t,n){return e._timeUpdate(e.params.detune,t,n)},e.setType=function(t){D.includes(t)&&(e.filter.type=t)},e.name="Filter",e.filter=e.AC.createBiquadFilter(),e.params={frequency:e.filter.frequency,q:e.filter.q,gain:e.filter.gain,detune:e.filter.detune};var A=Z(Z({},X),n);return e.setFrequency(A.frequency),e.setQ(A.q),e.setGain(A.gain),e.setDetune(A.detune),e.setType(A.type),e}return o}(o);function $(t){return($="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function tt(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function et(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?tt(Object(n),!0).forEach((function(e){nt(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):tt(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function nt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function rt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ot(t,e){return(ot=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function At(t,e){return!e||"object"!==$(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ct(t){return(ct=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var it={frequency:2e3,q:0,detune:0,gain:0,type:"lowpass"};const ut=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ot(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=ct(e);if(n){var o=ct(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return At(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};rt(this,o),(e=r.call(this,t,n)).getInputs=function(){return[e.filter]},e.getOutputs=function(){return[e.filter]},e.getFrequency=function(){return e.params.frequency.value},e.getDetune=function(){return e.params.detune.value},e.getQ=function(){return e.params.q.value},e.getGain=function(){return e.params.gain.value},e.getType=function(){return e.filter.getType()},e.setFrequency=function(t,n){return e.filter.setFrequency(t,n)},e.setDetune=function(t,n){return e.filter.setDetune(t,n)},e.setQ=function(t,n){return e.filter.setQ(t,n)},e.setGain=function(t,n){return e.filter.setGain(t,n)},e.setType=function(t){return e.filter.setType(t)},e.name="FilterEnvelope",e.filter=new _(e.AC),e.params={frequency:e.filter.getParams().frequency,detune:e.filter.getParams().detune,q:e.filter.getParams().q,gain:e.filter.getParams().gain};var A=et(et({},it),n);return e.setFrequency(A.frequency),e.setQ(A.q),e.setDetune(A.detune),e.setGain(A.gain),e.setType(A.type),e.source.connect(e.filter.getParams().frequency),e}return o}(C);function at(t){return(at="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ft(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function st(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ft(Object(n),!0).forEach((function(e){lt(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ft(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function lt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function pt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function yt(t,e){return(yt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function gt(t,e){return!e||"object"!==at(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ht(t){return(ht=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var bt={gain:1};const mt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&yt(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=ht(e);if(n){var o=ht(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return gt(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};pt(this,o),(e=r.call(this,t)).getInputs=function(){return[e.gain]},e.getOutputs=function(){return[e.gain]},e.getGain=function(){return e.params.gain.value},e.setGain=function(t,n){return e._timeUpdate(e.params.gain,t,n)},e.name="Gain",e.gain=e.AC.createGain(),e.params={gain:e.gain.gain};var A=st(st({},bt),n);return e.setGain(A.gain),e}return o}(o);function Et(t){return(Et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ot(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function wt(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Ot(Object(n),!0).forEach((function(e){St(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ot(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function St(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function It(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ct(t,e){return(Ct=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function kt(t,e){return!e||"object"!==Et(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function dt(t){return(dt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var vt={gain:0};const Qt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ct(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=dt(e);if(n){var o=dt(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return kt(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};It(this,o),(e=r.call(this,t,n)).getInputs=function(){return[e.gain]},e.getOutputs=function(){return[e.gain]},e.getGain=function(){return e.params.gain.value},e.setGain=function(t,n){return e.gain.setGain(t,n)},e.name="GainEnvelope",e.gain=new mt(e.AC),e.params={gain:e.gain.getParams().gain};var A=wt(wt({},vt),n);return e.setGain(A.gain),e.source.connect(e.gain.getParams().gain),e}return o}(C);function Dt(t){return(Dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Rt(t,e){return(Rt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ft(t,e){return!e||"object"!==Dt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Mt(t){return(Mt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}const jt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Rt(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Mt(e);if(n){var o=Mt(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Ft(this,t)});function o(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),(e=r.call(this,t)).getInputs=function(){return[e.channelMerger]},e.getOutputs=function(){return[e.channelMerger]},e.name="ChannelMerger",e.channelMerger=e.AC.createChannelMerger(2),e.params={},e}return o}(o);function Bt(t){return(Bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Pt(t,e){return(Pt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Jt(t,e){return!e||"object"!==Bt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Gt(t){return(Gt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}const Kt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Pt(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Gt(e);if(n){var o=Gt(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Jt(this,t)});function o(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),(e=r.call(this,t)).getInputs=function(){return[e.channelSplitter]},e.getOutputs=function(){return[e.channelSplitter]},e.name="ChannelSplitter",e.channelSplitter=e.AC.createChannelSplitter(2),e.params={},e}return o}(o);function Tt(t){return(Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ut(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function qt(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Ut(Object(n),!0).forEach((function(e){Vt(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ut(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Vt(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Yt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Wt(t,e){return(Wt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Zt(t,e){return!e||"object"!==Tt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Nt(t){return(Nt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var xt={threshold:-24,ratio:12,knee:30,attack:.003,release:.25};const Lt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Wt(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Nt(e);if(n){var o=Nt(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Zt(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Yt(this,o),(e=r.call(this,t)).getInputs=function(){return[e.compressor]},e.getOutputs=function(){return[e.compressor]},e.getKnee=function(){return e.params.knee.value},e.getThreshold=function(){return e.params.threshold.value},e.getRatio=function(){return e.params.ratio.value},e.getAttack=function(){return e.params.attack.value},e.getRelease=function(){return e.params.release.value},e.getReduction=function(){return e.compressor.reduction},e.setKnee=function(t,n){return e._timeUpdate(e.params.knee,t,n)},e.setThreshold=function(t,n){return e._timeUpdate(e.params.threshold,t,n)},e.setRatio=function(t,n){return e._timeUpdate(e.params.ratio,t,n)},e.setAttack=function(t,n){return e._timeUpdate(e.params.attack,t,n)},e.setRelease=function(t,n){return e._timeUpdate(e.params.release,t,n)},e.name="Compressor",e.compressor=e.AC.createDynamicsCompressor(),e.params={knee:e.compressor.knee,threshold:e.compressor.threshold,ratio:e.compressor.ratio,attack:e.compressor.attack,release:e.compressor.release};var A=qt(qt({},xt),n);return e.setThreshold(A.threshold),e.setRatio(A.ratio),e.setKnee(A.knee),e.setAttack(A.attack),e.setRelease(A.release),e}return o}(o);function Ht(t){return(Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function zt(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Xt(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?zt(Object(n),!0).forEach((function(e){_t(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):zt(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function _t(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function $t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function te(t,e){return(te=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ee(t,e){return!e||"object"!==Ht(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ne(t){return(ne=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var re={buffer:null,normalize:!1};const oe=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&te(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=ne(e);if(n){var o=ne(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return ee(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};$t(this,o),(e=r.call(this,t)).getInputs=function(){return[e.convolver]},e.getOutputs=function(){return[e.convolver]},e.getBuffer=function(){return e.convolver.buffer},e.getNormalize=function(){return e.convolver.normalize},e.setBuffer=function(t){return e.convolver.buffer=t},e.setNormalize=function(t){return e.convolver.normalize=t},e.name="Convolver",e.convolver=e.AC.createConvolver(),e.params={};var A=Xt(Xt({},re),n);return e.setBuffer(A.buffer),e.setNormalize(A.normalize),e}return o}(o);function Ae(t){return(Ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ce(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function ie(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ce(Object(n),!0).forEach((function(e){ue(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ce(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function ue(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function ae(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function fe(t,e){return(fe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function se(t,e){return!e||"object"!==Ae(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function le(t){return(le=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var pe={delayTime:0};const ye=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&fe(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=le(e);if(n){var o=le(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return se(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ae(this,o),(e=r.call(this,t)).getInputs=function(){return[e.delay]},e.getOutputs=function(){return[e.delay]},e.getDelayTime=function(){return e.params.delayTime.value},e.setDelayTime=function(t,n){return e._timeUpdate(e.params.delayTime,t,n)},e.name="Delay",e.delay=e.AC.createDelay(),e.params={delayTime:e.delay.delayTime};var A=ie(ie({},pe),n);return e.setDelayTime(A.delayTime),e}return o}(o);function ge(t){return(ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function he(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function be(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?he(Object(n),!0).forEach((function(e){me(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):he(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function me(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Ee(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Oe(t,e){return(Oe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function we(t,e){return!e||"object"!==ge(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Se(t){return(Se=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Ie={pan:0};const Ce=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Oe(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Se(e);if(n){var o=Se(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return we(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ee(this,o),(e=r.call(this,t)).getInputs=function(){return[e.panner]},e.getOutputs=function(){return[e.panner]},e.getPan=function(){return e.params.pan.value},e.setPan=function(t,n){return e._timeUpdate(e.params.pan,t,n)},e.name="StereoPanner",e.panner=e.AC.createStereoPanner(),e.params={pan:e.panner.pan};var A=be(be({},Ie),n);return e.setPan(A.pan),e}return o}(o);function ke(t){return(ke="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function de(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function ve(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?de(Object(n),!0).forEach((function(e){Qe(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):de(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Qe(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function De(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Re(t,e){return(Re=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Fe(t,e){return!e||"object"!==ke(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Me(t){return(Me=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var je={curve:null,oversample:"none"};const Be=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Re(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Me(e);if(n){var o=Me(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Fe(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};De(this,o),(e=r.call(this,t)).getInputs=function(){return[e.waveShaper]},e.getOutputs=function(){return[e.waveShaper]},e.getCurve=function(){return e.waveShaper.curve},e.getOversample=function(){return e.waveShaper.oversample},e.setCurve=function(t){return e.waveShaper.curve=t},e.setOversample=function(t){d.includes(t)&&(e.waveShaper.oversample=t)},e.name="WaveShaper",e.waveShaper=e.AC.createWaveShaper(),e.params={};var A=ve(ve({},je),n);return e.setCurve(A.curve),e.setOversample(A.oversample),e}return o}(o);function Pe(t){return(Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Je(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Ge(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Je(Object(n),!0).forEach((function(e){Ke(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Je(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Ke(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Te(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ue(t,e){return(Ue=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function qe(t,e){return!e||"object"!==Pe(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ve(t){return(Ve=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Ye={threshold:-6,ratio:20,knee:0,attack:.003,release:.01,gain:.75};const We=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ue(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Ve(e);if(n){var o=Ve(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return qe(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Te(this,o),(e=r.call(this,t)).getInputs=function(){return[e.limiter]},e.getOutputs=function(){return[e.gain]},e.getKnee=function(){return e.params.knee.value},e.getThreshold=function(){return e.params.threshold.value},e.getRatio=function(){return e.params.ratio.value},e.getAttack=function(){return e.params.attack.value},e.getRelease=function(){return e.params.release.value},e.getReduction=function(){return e.limiter.reduction},e.getGain=function(){return e.params.gain.value},e.setKnee=function(t,n){return e.limiter.setKnee(t,n)},e.setThreshold=function(t,n){return e.limiter.setThreshold(t,n)},e.setRatio=function(t,n){return e.limiter.setRatio(t,n)},e.setAttack=function(t,n){return e.limiter.setAttack(t,n)},e.setRelease=function(t,n){return e.limiter.setRelease(t,n)},e.setGain=function(t,n){return e.gain.setGain(t,n)},e.name="Limiter",e.limiter=new Lt(e.AC),e.gain=new mt(e.AC),e.params={knee:e.limiter.getParams().knee,threshold:e.limiter.getParams().threshold,ratio:e.limiter.getParams().ratio,attack:e.limiter.getParams().attack,release:e.limiter.getParams().release,gain:e.gain.getParams().gain};var A=Ge(Ge({},Ye),n);return e.setThreshold(A.threshold),e.setRatio(A.ratio),e.setKnee(A.knee),e.setAttack(A.attack),e.setRelease(A.release),e.setGain(A.gain),e.limiter.connect(e.gain),e}return o}(o);function Ze(t){return(Ze="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ne(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function xe(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Ne(Object(n),!0).forEach((function(e){Le(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ne(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Le(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function He(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ze(t,e){return(ze=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Xe(t,e){return!e||"object"!==Ze(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function _e(t){return(_e=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var $e={type:"sine",frequency:440,detune:0,start:!1};const tn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ze(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=_e(e);if(n){var o=_e(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Xe(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};He(this,o),(e=r.call(this,t)).start=function(){return e.osc.start()},e.stop=function(){return e.osc.stop()},e.getOutputs=function(){return[e.osc]},e.getFrequency=function(){return e.params.frequency.value},e.getDetune=function(){return e.params.detune.value},e.getWaveform=function(){return e.getType()},e.getType=function(){return e.osc.type},e.setFrequency=function(t,n){return e._timeUpdate(e.params.frequency,t,n)},e.setDetune=function(t,n){return e._timeUpdate(e.params.detune,t,n)},e.setWaveform=function(t){return e.setType(t)},e.setType=function(t){Q.includes(t)&&(e.osc.type=t)},e.name="Oscillator",e.osc=e.AC.createOscillator(),e.params={frequency:e.osc.frequency,detune:e.osc.detune};var A=xe(xe({},$e),n);return e.setType(A.type),e.setFrequency(A.frequency),e.setDetune(A.detune),A.start&&e.start(),e}return o}(o);function en(t){return(en="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function nn(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function rn(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?nn(Object(n),!0).forEach((function(e){on(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):nn(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function on(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function An(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function cn(t,e){return(cn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function un(t,e){return!e||"object"!==en(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function an(t){return(an=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var fn={rate:1,depth:1,detune:0,type:"sine",start:!1};const sn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&cn(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=an(e);if(n){var o=an(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return un(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};An(this,o),(e=r.call(this,t)).start=function(){return e.osc.start()},e.stop=function(){return e.osc.stop()},e.getOutputs=function(){return[e.depth]},e.getRate=function(){return e.params.rate.value},e.getDetune=function(){return e.params.detune.value},e.getDepth=function(){return e.params.depth.value},e.getType=function(){return e.params.type},e.setRate=function(t,n){return e.osc.setFrequency(R(t,0,100),n)},e.setDetune=function(t,n){return e.osc.setDetune(t,n)},e.setDepth=function(t,n){return e.depth.setGain(t,n)},e.setType=function(t){e.osc.setType(t),e.params.type=t},e.name="LFO",e.depth=new mt(e.AC),e.osc=new tn(e.AC),e.params={rate:e.osc.getParams().frequency,detune:e.osc.getParams().detune,depth:e.depth.getParams().gain,type:e.osc.getParams().type};var A=rn(rn({},fn),n);return e.setRate(A.rate),e.setDepth(A.depth),e.setDetune(A.detune),e.setType(A.type),e.osc.connect(e.depth),A.start&&e.start(),e}return o}(o);function ln(t){return(ln="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function pn(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function yn(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?pn(Object(n),!0).forEach((function(e){gn(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):pn(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function gn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function hn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function bn(t,e){return(bn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function mn(t,e){return!e||"object"!==ln(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function En(t){return(En=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var On={amount:0,delayTime:.04,depth:.005,rate:.25,feedback:.4};const wn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&bn(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=En(e);if(n){var o=En(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return mn(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};hn(this,o),(e=r.call(this,t)).getInputs=function(){return[e.dryGain,e.chorusGain]},e.getOutputs=function(){return[e.dryGain,e.wetGain]},e.getAmount=function(){return e.wetGain.getGain()},e.getDelayTime=function(){return e.leftDelay.getDelayTime()},e.getFeedback=function(){return e.params.feedback.value},e.getRate=function(){return e.leftLFO.getRate()},e.getDepth=function(){return e.leftLFO.getDepth()},e.setAmount=function(t,n){e._linearFadeUpdate(e.dryGain.getParams().gain,e.wetGain.getParams().gain,t,n)},e.setFeedback=function(t,n){return e.feedback.setGain(t,n)},e.setRate=function(t,n){e.leftLFO.setRate(t,n),e.rightLFO.setRate(2*t,n)},e.setDepth=function(t,n){e.leftLFO.setDepth(t,n),e.rightLFO.setDepth(t,n)},e.setDelayTime=function(t,n){e.leftDelay.setDelayTime(t,n),e.rightDelay.setDelayTime(t,n)},e.name="Chorus",e.dryGain=new mt(e.AC),e.leftLFO=new sn(e.AC,{start:!0}),e.rightLFO=new sn(e.AC,{start:!0}),e.chorusGain=new mt(e.AC,{gain:.6}),e.leftDelay=new ye(e.AC),e.rightDelay=new ye(e.AC),e.channelMerger=new jt(e.AC),e.feedback=new mt(e.AC),e.wetGain=new mt(e.AC),e.params={delayTime:[e.leftDelay.getParams().delayTime,e.rightDelay.getParams().delayTime],feedback:e.feedback.getParams().gain,rate:[e.leftLFO.getParams().rate,e.rightLFO.getParams().rate],depth:[e.leftLFO.getParams().depth,e.rightLFO.getParams().depth]};var A=yn(yn({},On),n);return e.setAmount(A.amount),e.setDelayTime(A.delayTime),e.setRate(A.rate),e.setDepth(A.depth),e.setFeedback(A.feedback),e.chorusGain.connect(e.leftDelay),e.chorusGain.connect(e.rightDelay),e.leftDelay.connect(e.channelMerger,0,0),e.rightDelay.connect(e.channelMerger,0,1),e.channelMerger.connect(e.feedback),e.channelMerger.connect(e.wetGain),e.feedback.connect(e.leftDelay),e.feedback.connect(e.rightDelay),e.leftLFO.connect(e.leftDelay.getParams().delayTime),e.rightLFO.connect(e.rightDelay.getParams().delayTime),e}return o}(o);function Sn(t){return(Sn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function In(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Cn(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?In(Object(n),!0).forEach((function(e){kn(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):In(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function kn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function dn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function vn(t,e){return(vn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Qn(t,e){return!e||"object"!==Sn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Dn(t){return(Dn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Rn={amount:0,distortion:0},Fn=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=44100,n=new Float32Array(e);return n.map((function(n,r){var o=2*r/e-1;return(3+t)*Math.atan(5*Math.sinh(.25*o))/(Math.PI+t*Math.abs(o))}))};const Mn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&vn(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Dn(e);if(n){var o=Dn(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Qn(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};dn(this,o),(e=r.call(this,t)).getInputs=function(){return[e.dryGain,e.waveShaper]},e.getOutputs=function(){return[e.dryGain,e.wetGain]},e.getAmount=function(){return e.params.amount.value},e.getDistortion=function(){return e.distortion},e.setAmount=function(t,n){e._linearFadeUpdate(e.dryGain.getParams().gain,e.wetGain.getParams().gain,t,n)},e.setDistortion=function(t){e.waveShaper.setCurve(Fn(t)),e.distortion=t},e.name="Distortion",e.dryGain=new mt(e.AC),e.waveShaper=new Be(e.AC),e.wetGain=new mt(e.AC),e.distortion=0,e.params={amount:e.wetGain.getParams().gain};var A=Cn(Cn({},Rn),n);return e.setAmount(A.amount),e.setDistortion(A.distortion),e.waveShaper.connect(e.wetGain),e}return o}(o);function jn(t){return(jn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Bn(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Pn(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Bn(Object(n),!0).forEach((function(e){Jn(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Bn(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Jn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Gn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Kn(t,e){return(Kn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Tn(t,e){return!e||"object"!==jn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Un(t){return(Un=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var qn={lowFrequency:320,lowGain:0,highFrequency:3200,highGain:0};const Vn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Kn(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Un(e);if(n){var o=Un(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Tn(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gn(this,o),(e=r.call(this,t)).getInputs=function(){return[e.low]},e.getOutputs=function(){return[e.high]},e.getLowFrequency=function(){return e.params.lowFrequency.value},e.getLowGain=function(){return e.params.lowGain.value},e.getHighFrequency=function(){return e.params.highFrequency.value},e.getHighGain=function(){return e.params.highGain.value},e.setLowGain=function(t,n){return e.low.setGain(t,n)},e.setLowFrequency=function(t,n){return e.low.setFrequency(t,n)},e.setHighGain=function(t,n){return e.high.setGain(t,n)},e.setHighFrequency=function(t,n){return e.high.setFrequency(t,n)},e.name="EQ2",e.low=new _(e.AC,{type:"lowshelf",frequency:320}),e.high=new _(e.AC,{type:"highshelf",frequency:3200}),e.params={lowFrequency:e.low.getParams().frequency,lowGain:e.low.getParams().gain,highFrequency:e.high.getParams().frequency,highGain:e.high.getParams().gain};var A=Pn(Pn({},qn),n);return e.setLowFrequency(A.lowFrequency),e.setLowGain(A.lowGain),e.setHighFrequency(A.highFrequency),e.setHighGain(A.highGain),e.low.connect(e.high),e}return o}(o);function Yn(t){return(Yn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Wn(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Zn(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Wn(Object(n),!0).forEach((function(e){Nn(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Wn(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Nn(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function xn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ln(t,e){return(Ln=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Hn(t,e){return!e||"object"!==Yn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function zn(t){return(zn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Xn={amount:0,delayTime:.2,feedback:.6,tone:4400};const _n=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ln(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=zn(e);if(n){var o=zn(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Hn(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};xn(this,o),(e=r.call(this,t)).getInputs=function(){return[e.dryGain,e.delay]},e.getOutputs=function(){return[e.dryGain,e.wetGain]},e.getAmount=function(){return e.amount},e.getDelayTime=function(){return e.params.delayTime.value},e.getFeedback=function(){return e.params.feedback.value},e.getTone=function(){return e.params.tone.value},e.setAmount=function(t,n){e.amount=t,e._dryWetUpdate(e.dryGain.getParams().gain,e.wetGain.getParams().gain,t,n)},e.setFeedback=function(t,n){return e.feedbackGain.setGain(t,n)},e.setTone=function(t,n){return e.tone.setFrequency(t,n)},e.setDelayTime=function(t,n){return e.delay.setDelayTime(t,n)},e.name="FeedbackDelay",e.dryGain=new mt(e.AC),e.delay=new ye(e.AC),e.feedbackGain=new mt(e.AC),e.tone=new _(e.AC),e.wetGain=new mt(e.AC),e.amount=0,e.params={delayTime:e.delay.getParams().delayTime,feedback:e.feedbackGain.getParams().gain,tone:e.tone.getParams().frequency};var A=Zn(Zn({},Xn),n);return e.setAmount(A.amount),e.setDelayTime(A.delayTime),e.setFeedback(A.feedback),e.setTone(A.tone),e.delay.connect(e.feedbackGain),e.feedbackGain.connect(e.tone),e.feedbackGain.connect(e.delay),e.tone.connect(e.wetGain),e}return o}(o);function $n(t){return($n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function tr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function er(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?tr(Object(n),!0).forEach((function(e){nr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):tr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function nr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function rr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function or(t,e){return(or=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ar(t,e){return!e||"object"!==$n(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function cr(t){return(cr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ir={amount:0,delayTime:.01,depth:.0015,feedback:.6666,rate:.3333};const ur=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&or(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=cr(e);if(n){var o=cr(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Ar(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};rr(this,o),(e=r.call(this,t)).getInputs=function(){return[e.dryGain,e.inputGain]},e.getOutputs=function(){return[e.dryGain,e.wetGain]},e.getAmount=function(){return e.wetGain.getGain()},e.getDelayTime=function(){return e.params.delayTime.value},e.getDepth=function(){return e.params.depth.value},e.getFeedback=function(){return e.params.feedback.value},e.getRate=function(){return e.params.rate.value},e.setAmount=function(t,n){e._linearFadeUpdate(e.dryGain.getParams().gain,e.wetGain.getParams().gain,t,n)},e.setFeedback=function(t,n){return e.feedback.setGain(t,n)},e.setRate=function(t,n){return e.lfo.setRate(t,n)},e.setDepth=function(t,n){return e.lfo.setDepth(t,n)},e.setDelayTime=function(t,n){return e.delay.setDelayTime(t,n)},e.name="Flanger",e.dryGain=new mt(e.AC),e.inputGain=new mt(e.AC),e.delay=new ye(e.AC),e.feedback=new mt(e.AC),e.lfo=new sn(e.AC,{start:!0}),e.wetGain=new mt(e.AC),e.params={delayTime:e.delay.getParams().delayTime,depth:e.lfo.getParams().depth,feedback:e.feedback.getParams().gain,rate:e.lfo.getParams().rate};var A=er(er({},ir),n);return e.setAmount(A.amount),e.setDelayTime(A.delayTime),e.setFeedback(A.feedback),e.setDepth(A.depth),e.setRate(A.rate),e.inputGain.connect(e.delay),e.inputGain.connect(e.wetGain),e.delay.connect(e.feedback),e.delay.connect(e.wetGain),e.feedback.connect(e.inputGain),e.lfo.connect(e.delay.getParams().delayTime),e}return o}(o);function ar(t){return(ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function fr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function sr(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?fr(Object(n),!0).forEach((function(e){lr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):fr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function lr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function pr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function yr(t,e){return(yr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function gr(t,e){return!e||"object"!==ar(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function hr(t){return(hr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var br={amount:0,preDelayTime:.2,leftDelayTime:.2,rightDelayTime:.2,leftFeedback:.6,rightFeedback:.6,tone:4400};const mr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&yr(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=hr(e);if(n){var o=hr(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return gr(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};pr(this,o),(e=r.call(this,t)).getInputs=function(){return[e.dryGain,e.leftDelay,e.preDelay]},e.getOutputs=function(){return[e.dryGain,e.wetGain]},e.getAmount=function(){return e.amount},e.getPreDelayTime=function(){return e.params.preDelayTime.value},e.getLeftDelayTime=function(){return e.params.leftDelayTime.value},e.getRightDelayTime=function(){return e.params.rightDelayTime.value},e.getLeftFeedback=function(){return e.params.leftFeedback.value},e.getRightFeedback=function(){return e.params.rightFeedback.value},e.getTone=function(){return e.params.tone.value},e.setAmount=function(t,n){e.amount=t,e._dryWetUpdate(e.dryGain.getParams().gain,e.wetGain.getParams().gain,t,n)},e.setPreDelayTime=function(t,n){return e.preDelay.setDelayTime(t,n)},e.setLeftDelayTime=function(t,n){return e.leftDelay.setDelayTime(t,n)},e.setRightDelayTime=function(t,n){return e.rightDelay.setDelayTime(t,n)},e.setLeftFeedback=function(t,n){return e.leftFeedbackGain.setGain(t,n)},e.setRightFeedback=function(t,n){return e.rightFeedbackGain.setGain(t,n)},e.setTone=function(t,n){return e.tone.setFrequency(t,n)},e.name="PingPongDelay",e.dryGain=new mt(e.AC),e.leftDelay=new ye(e.AC),e.preDelay=new ye(e.AC),e.rightDelay=new ye(e.AC),e.leftFeedbackGain=new mt(e.AC),e.rightFeedbackGain=new mt(e.AC),e.channelMerger=new jt(e.AC),e.tone=new _(e.AC),e.wetGain=new mt(e.AC),e.amount=0,e.params={preDelayTime:e.preDelay.getParams().delayTime,leftDelayTime:e.leftDelay.getParams().delayTime,rightDelayTime:e.rightDelay.getParams().delayTime,leftFeedback:e.leftFeedbackGain.getParams().gain,rightFeedback:e.rightFeedbackGain.getParams().gain,tone:e.tone.getParams().frequency};var A=sr(sr({},br),n);return e.setAmount(A.amount),e.setPreDelayTime(A.preDelayTime),e.setLeftDelayTime(A.leftDelayTime),e.setRightDelayTime(A.rightDelayTime),e.setLeftFeedback(A.leftFeedback),e.setRightFeedback(A.rightFeedback),e.setTone(A.tone),e.preDelay.connect(e.rightDelay),e.leftDelay.connect(e.channelMerger,0,0),e.rightDelay.connect(e.channelMerger,0,1),e.leftDelay.connect(e.leftFeedbackGain),e.leftFeedbackGain.connect(e.rightDelay),e.rightDelay.connect(e.rightFeedbackGain),e.rightFeedbackGain.connect(e.leftDelay),e.channelMerger.connect(e.tone),e.tone.connect(e.wetGain),e}return o}(o),Er="";function Or(t){return(Or="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function wr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Sr(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?wr(Object(n),!0).forEach((function(e){Ir(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):wr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Ir(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Cr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function kr(t,e){return(kr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function dr(t,e){return!e||"object"!==Or(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function vr(t){return(vr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Qr={amount:0,buffer:null,normalize:!1};const Dr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&kr(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=vr(e);if(n){var o=vr(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return dr(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Cr(this,o),(e=r.call(this,t)).getInputs=function(){return[e.dryGain,e.convolver]},e.getOutputs=function(){return[e.dryGain,e.wetGain]},e.getAmount=function(){return e.amount},e.getBuffer=function(){return e.convolver.getParams().buffer},e.getNormalize=function(){return e.convolver.getParams().normalize},e.setAmount=function(t,n){e.amount=t,e._dryWetUpdate(e.dryGain.getParams().gain,e.wetGain.getParams().gain,t,n)},e.setBuffer=function(t){return e.convolver.setBuffer(t)},e.setNormalize=function(t){return e.convolver.setNormalize(t)},e.name="Reverb",e.dryGain=new mt(e.AC),e.convolver=new oe(e.AC),e.wetGain=new mt(e.AC),e.amount=0,e.params={};var A=Sr(Sr({},Qr),n);return e.setAmount(A.amount),e.setBuffer(A.buffer),e.setNormalize(A.normalize),e.getBuffer()||e.AC.decodeAudioData(V(Er),(function(t){return e.setBuffer(t)}),(function(t){return console.error("Error decoding reverb data: "+t.err)})),e.convolver.connect(e.wetGain),e}return o}(o);function Rr(t){return(Rr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Fr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Mr(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Fr(Object(n),!0).forEach((function(e){jr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Fr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function jr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Br(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Pr(t,e){return(Pr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Jr(t,e){return!e||"object"!==Rr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Gr(t){return(Gr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Kr={waveform:"sine",frequency:440,detune:0,gain:1};const Tr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Pr(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Gr(e);if(n){var o=Gr(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Jr(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Br(this,o),(e=r.call(this,t)).getOutputs=function(){return[e.gain]},e.getWaveform=function(){return e.osc.getType()},e.getFrequency=function(){return e.params.frequency.value},e.getDetune=function(){return e.params.detune.value},e.getGain=function(){return e.params.gain.value},e.setWaveform=function(t){return e.osc.setType(t)},e.setFrequency=function(t,n){return e.osc.setFrequency(t,n)},e.setDetune=function(t,n){return e.osc.setDetune(t,n)},e.setGain=function(t,n){return e.gain.setGain(t,n)},e.name="Osc",e.osc=new tn(e.AC,{start:!0}),e.gain=new mt(e.AC),e.params={frequency:e.osc.getParams().frequency,detune:e.osc.getParams().detune,gain:e.gain.getParams().gain};var A=Mr(Mr({},Kr),n);return e.setWaveform(A.waveform),e.setFrequency(A.frequency),e.setDetune(A.detune),e.setGain(A.gain),e.osc.connect(e.gain),e}return o}(o);var Ur=function(t){return t.forEach((function(t){return t.disconnect()}))};const qr=[function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),e.connect(n.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"A > B > C > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(n.getParams().frequency),e.connect(n.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[A + B] > C > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),e.connect(r.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[A > B + C] > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),t.connect(n.getParams().frequency),e.connect(r.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[[A > B] + [A > C]] > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),e.connect(n.getParams().frequency),e.connect(r.getParams().frequency),n.connect(o),r.connect(o),"[A > B > C] + [A > B > D] => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),e.connect(n.getParams().frequency),n.connect(o),r.connect(o),"[A > B > C] + D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(r.getParams().frequency),e.connect(r.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[A + B + C] > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),e.connect(o),n.connect(r.getParams().frequency),r.connect(o),"[A > B] + [C > D] => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),t.connect(n.getParams().frequency),t.connect(r.getParams().frequency),e.connect(o),n.connect(o),r.connect(o),"[A > B] + [A > C] + [A > D] => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(e.getParams().frequency),e.connect(o),n.connect(o),r.connect(o),"[A > B] + C + D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(o),e.connect(o),n.connect(o),r.connect(o),"A + B + C + D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(e.getParams().frequency),e.connect(n.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[A > A] > B > C > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(n.getParams().frequency),e.connect(n.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[[A > A] + B] > C > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(r.getParams().frequency),e.connect(n.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[[A > A] + B > C] > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(e.getParams().frequency),e.connect(r.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[[A > A] > B + C] > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(e.getParams().frequency),e.connect(o),n.connect(n.getParams().frequency),n.connect(r.getParams().frequency),r.connect(o),"[A > A] > B + [C > C] > D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(e.getParams().frequency),t.connect(n.getParams().frequency),t.connect(r.getParams().frequency),e.connect(o),n.connect(o),r.connect(o),"[A > A > B] + [A > A > C] + [A > A > D] => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(e.getParams().frequency),e.connect(o),n.connect(o),r.connect(o),"[A > A > B] + C + D => Out"},function(t,e,n,r,o){return Ur([t,e,n,r]),t.connect(t.getParams().frequency),t.connect(o),e.connect(o),n.connect(o),r.connect(o),"[A > A] + B + C + D => Out"}];function Vr(t){return(Vr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Yr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Wr(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Yr(Object(n),!0).forEach((function(e){Zr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Yr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Zr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Nr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function xr(t,e){return(xr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Lr(t,e){return!e||"object"!==Vr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Hr(t){return(Hr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var zr={algorithm:0,modAFrequency:440,modADetune:0,modAGain:440,modBFrequency:440,modBDetune:0,modBGain:440,modCFrequency:440,modCDetune:0,modCGain:440,modDFrequency:440,modDDetune:0,modDGain:440,gainAttack:0,gainDecay:0,gainSustain:1,gainRelease:0,gainAmount:.75};const Xr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&xr(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Hr(e);if(n){var o=Hr(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Lr(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Nr(this,o),(e=r.call(this,t)).getOutputs=function(){return[e.gainEnv]},e.getAlgorithm=function(){return e.algorithm},e.getModAFrequency=function(){return e.params.modAFrequency.value},e.getModADetune=function(){return e.params.modADetune.value},e.getModAGain=function(){return e.params.modAGain.value},e.getModBFrequency=function(){return e.params.modBFrequency.value},e.getModBDetune=function(){return e.params.modBDetune.value},e.getModBGain=function(){return e.params.modBGain.value},e.getModCFrequency=function(){return e.params.modCFrequency.value},e.getModCDetune=function(){return e.params.modCDetune.value},e.getModCGain=function(){return e.params.modCGain.value},e.getModDFrequency=function(){return e.params.modDFrequency.value},e.getModDDetune=function(){return e.params.modDDetune.value},e.getModDGain=function(){return e.params.modDGain.value},e.getGainAttack=function(){return e.gainEnv.getAttack()},e.getGainDecay=function(){return e.gainEnv.getDecay()},e.getGainSustain=function(){return e.gainEnv.getSustain()},e.getGainRelease=function(){return e.gainEnv.getRelease()},e.getGainAmount=function(){return e.gainEnv.getModifier()},e.setAlgorithm=function(t){e.algorithm=qr[t](e.modA,e.modB,e.modC,e.modD,e.limiter)},e.setModAFrequency=function(t,n){return e.modA.setFrequency(t,n)},e.setModADetune=function(t,n){return e.modA.setDetune(t,n)},e.setModAGain=function(t,n){return e.modA.setGain(t,n)},e.setModBFrequency=function(t,n){return e.modB.setFrequency(t,n)},e.setModBDetune=function(t,n){return e.modB.setDetune(t,n)},e.setModBGain=function(t,n){return e.modB.setGain(t,n)},e.setModCFrequency=function(t,n){return e.modC.setFrequency(t,n)},e.setModCDetune=function(t,n){return e.modC.setDetune(t,n)},e.setModCGain=function(t,n){return e.modC.setGain(t,n)},e.setModDFrequency=function(t,n){return e.modD.setFrequency(t,n)},e.setModDDetune=function(t,n){return e.modD.setDetune(t,n)},e.setModDGain=function(t,n){return e.modD.setGain(t,n)},e.setGainAttack=function(t){return e.gainEnv.setAttack(t)},e.setGainDecay=function(t){return e.gainEnv.setDecay(t)},e.setGainSustain=function(t){return e.gainEnv.setSustain(t)},e.setGainRelease=function(t){return e.gainEnv.setRelease(t)},e.setGainAmount=function(t){return e.gainEnv.setModifier(t)},e.triggerAttack=function(){return e.gainEnv.triggerAttack()},e.triggerRelease=function(){return e.gainEnv.triggerRelease()},e.triggerStop=function(){return e.gainEnv.triggerStop()},e.name="FMSynth",e.modA=new Tr(e.AC),e.modB=new Tr(e.AC),e.modC=new Tr(e.AC),e.modD=new Tr(e.AC),e.limiter=new We(e.AC),e.gainEnv=new Qt(e.AC),e.algorithm=null,e.params={modAFrequency:e.modA.getParams().frequency,modADetune:e.modA.getParams().detune,modAGain:e.modA.getParams().gain,modBFrequency:e.modB.getParams().frequency,modBDetune:e.modB.getParams().detune,modBGain:e.modB.getParams().gain,modCFrequency:e.modC.getParams().frequency,modCDetune:e.modC.getParams().detune,modCGain:e.modC.getParams().gain,modDFrequency:e.modD.getParams().frequency,modDDetune:e.modD.getParams().detune,modDGain:e.modD.getParams().gain};var A=Wr(Wr({},zr),n);return e.setAlgorithm(A.algorithm),e.setModAFrequency(A.modAFrequency),e.setModADetune(A.modADetune),e.setModAGain(A.modAGain),e.setModBFrequency(A.modBFrequency),e.setModBDetune(A.modBDetune),e.setModBGain(A.modBGain),e.setModCFrequency(A.modCFrequency),e.setModCDetune(A.modCDetune),e.setModCGain(A.modCGain),e.setModDFrequency(A.modDFrequency),e.setModDDetune(A.modDDetune),e.setModDGain(A.modDGain),e.setGainAttack(A.gainAttack),e.setGainDecay(A.gainDecay),e.setGainSustain(A.gainSustain),e.setGainRelease(A.gainRelease),e.setGainAmount(A.gainAmount),e.limiter.connect(e.gainEnv),e}return o}(o);function _r(t){return(_r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function $r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function to(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?$r(Object(n),!0).forEach((function(e){eo(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):$r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function eo(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function no(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ro(t,e){return(ro=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function oo(t,e){return!e||"object"!==_r(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ao(t){return(Ao=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var co={waveform:"sine",frequency:440,detune:0,gainAttack:0,gainDecay:0,gainSustain:1,gainRelease:0,gainAmount:.75};const io=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ro(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Ao(e);if(n){var o=Ao(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return oo(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};no(this,o),(e=r.call(this,t)).getOutputs=function(){return[e.gainEnv]},e.getCurrentNote=function(){return e.currentNote},e.getWaveform=function(){return e.osc.getType()},e.getFrequency=function(){return e.params.frequency.value},e.getDetune=function(){return e.params.detune.value},e.getGainAttack=function(){return e.gainEnv.getAttack()},e.getGainDecay=function(){return e.gainEnv.getDecay()},e.getGainSustain=function(){return e.gainEnv.getSustain()},e.getGainRelease=function(){return e.gainEnv.getRelease()},e.getGainAmount=function(){return e.gainEnv.getModifier()},e.setWaveform=function(t){return e.osc.setType(t)},e.setFrequency=function(t,n){return e.osc.setFrequency(t,n)},e.setDetune=function(t,n){return e.osc.setDetune(t,n)},e.setGainAttack=function(t){return e.gainEnv.setAttack(t)},e.setGainDecay=function(t){return e.gainEnv.setDecay(t)},e.setGainSustain=function(t){return e.gainEnv.setSustain(t)},e.setGainRelease=function(t){return e.gainEnv.setRelease(t)},e.setGainAmount=function(t){return e.gainEnv.setModifier(t)},e.noteOn=function(t){return e._noteOn(t)},e.noteOff=function(t){return e._noteOff(t)},e.noteStop=function(){return e._noteStop()},e._noteOn=function(t){t?(e.currentNote=t,e.osc.setFrequency(q(t)),e.gainEnv.triggerAttack()):console.error("Note must be provided to play")},e._noteOff=function(t){t&&t!==e.currentNote||(e.currentNote=null,e.gainEnv.triggerRelease())},e._noteStop=function(){e.currentNote=null,e.gainEnv.triggerStop()},e.name="Synth",e.osc=new tn(e.AC,{start:!0}),e.gainEnv=new Qt(e.AC),e.currentNote=null,e.params={frequency:e.osc.getParams().frequency,detune:e.osc.getParams().detune,gain:e.gainEnv.getParams().gain};var A=to(to({},co),n);return e.setWaveform(A.waveform),e.setFrequency(A.frequency),e.setDetune(A.detune),e.setGainAttack(A.gainAttack),e.setGainDecay(A.gainDecay),e.setGainSustain(A.gainSustain),e.setGainRelease(A.gainRelease),e.setGainAmount(A.gainAmount),e.osc.connect(e.gainEnv),e}return o}(o);function uo(t){return(uo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ao(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function fo(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ao(Object(n),!0).forEach((function(e){so(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ao(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function so(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function lo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function po(t,e){return(po=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function yo(t,e){return!e||"object"!==uo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function go(t){return(go=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ho={filterFrequency:2e3,filterQ:0,filterDetune:0,filterGain:0,filterType:"lowpass",filterAttack:0,filterDecay:0,filterSustain:1,filterRelease:0,filterAmount:6e3};const bo=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&po(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=go(e);if(n){var o=go(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return yo(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};lo(this,o),(e=r.call(this,t,n)).getOutputs=function(){return[e.filterEnv]},e.getFilterFrequency=function(){return e.filterEnv.getFrequency()},e.getFilterDetune=function(){return e.filterEnv.getDetune()},e.getFilterQ=function(){return e.filterEnv.getQ()},e.getFilterGain=function(){return e.filterEnv.getGain()},e.getFilterType=function(){return e.filterEnv.getType()},e.getFilterAttack=function(){return e.filterEnv.getAttack()},e.getFilterDecay=function(){return e.filterEnv.getDecay()},e.getFilterSustain=function(){return e.filterEnv.getSustain()},e.getFilterRelease=function(){return e.filterEnv.getRelease()},e.getFilterAmount=function(){return e.filterEnv.getModifier()},e.setFilterFrequency=function(t,n){return e.filterEnv.setFrequency(t,n)},e.setFilterDetune=function(t,n){return e.filterEnv.setDetune(t,n)},e.setFilterQ=function(t,n){return e.filterEnv.setQ(t,n)},e.setFilterGain=function(t,n){return e.filterEnv.setGain(t,n)},e.setFilterType=function(t){return e.filterEnv.getType(t)},e.setFilterAttack=function(t){return e.filterEnv.setAttack(t)},e.setFilterDecay=function(t){return e.filterEnv.setDecay(t)},e.setFilterSustain=function(t){return e.filterEnv.setSustain(t)},e.setFilterRelease=function(t){return e.filterEnv.setRelease(t)},e.setFilterAmount=function(t){return e.filterEnv.setModifier(t)},e.noteOn=function(t){e._noteOn(t),e.filterEnv.triggerAttack()},e.noteOff=function(t){t&&t!==e.currentNote||(e._noteOff(t),e.filterEnv.triggerRelease())},e.noteStop=function(){e.noteStop(),e.filterEnv.triggerStop()},e.name="MonoSynth",e.filterEnv=new ut(e.AC),e.params=fo(fo({},e.params),{},{filterFrequency:e.filterEnv.getParams().frequency,filterQ:e.filterEnv.getParams().q,filterDetune:e.filterEnv.getParams().detune,filterGain:e.filterEnv.getParams().gain});var A=fo(fo({},ho),n);return e.setFilterType(A.filterType),e.setFilterFrequency(A.filterFrequency),e.setFilterQ(A.filterQ),e.setFilterDetune(A.filterDetune),e.setFilterGain(A.filterGain),e.setFilterAttack(A.filterAttack),e.setFilterDecay(A.filterDecay),e.setFilterSustain(A.filterSustain),e.setFilterRelease(A.filterRelease),e.setFilterAmount(A.filterAmount),e.gainEnv.connect(e.filterEnv),e}return o}(io);function mo(t){return(mo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Eo(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Oo(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Eo(Object(n),!0).forEach((function(e){wo(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Eo(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function wo(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function So(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Io(t,e){return(Io=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Co(t,e){return!e||"object"!==mo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ko(t){return(ko=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var vo={polyphony:8,waveform:"sine",frequency:440,detune:0,gainAttack:0,gainDecay:0,gainSustain:1,gainRelease:0,gainAmount:.25,filterFrequency:2e3,filterQ:0,filterDetune:0,filterGain:0,filterType:"lowpass",filterAttack:0,filterDecay:0,filterSustain:1,filterRelease:0,filterAmount:6e3};const Qo=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Io(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=ko(e);if(n){var o=ko(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Co(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};So(this,o),(e=r.call(this,t)).getOutputs=function(){return[e.limiter]},e.getPolyphony=function(){return e.polyphony},e.getWaveform=function(){return e.voices[0].getWaveform()},e.getDetune=function(){return e.voices[0].getDetune()},e.getGainAttack=function(){return e.voices[0].getGainAttack()},e.getGainDecay=function(){return e.voices[0].getGainDecay()},e.getGainSustain=function(){return e.voices[0].getGainSustain()},e.getGainRelease=function(){return e.voices[0].getGainRelease()},e.getGainAmount=function(){return e.voices[0].getGainAmount()},e.getFilterFrequency=function(){return e.voices[0].getFilterFrequency()},e.getFilterDetune=function(){return e.voices[0].getFilterDetune()},e.getFilterQ=function(){return e.voices[0].getFilterQ()},e.getFilterGain=function(){return e.voices[0].getFilterGain()},e.getFilterType=function(){return e.voices[0].getFilterType()},e.getFilterAttack=function(){return e.voices[0].getFilterAttack()},e.getFilterDecay=function(){return e.voices[0].getFilterDecay()},e.getFilterSustain=function(){return e.voices[0].getFilterSustain()},e.getFilterRelease=function(){return e.voices[0].getFilterRelease()},e.getFilterAmount=function(){return e.voices[0].getFilterAmount()},e.setPolyphony=function(t){return e.polyphony=R(t,1,8)},e.setWaveform=function(t){return e.voices.forEach((function(e){return e.setWaveform(t)}))},e.setDetune=function(t,n){return e.voices.forEach((function(e){return e.setDetune(t,n)}))},e.setGainAttack=function(t){return e.voices.forEach((function(e){return e.setGainAttack(t)}))},e.setGainDecay=function(t){return e.voices.forEach((function(e){return e.setGainDecay(t)}))},e.setGainSustain=function(t){return e.voices.forEach((function(e){return e.setGainSustain(t)}))},e.setGainRelease=function(t){return e.voices.forEach((function(e){return e.setGainRelease(t)}))},e.setGainAmount=function(t){return e.voices.forEach((function(e){return e.setGainAmount(t)}))},e.setFilterFrequency=function(t,n){return e.voices.forEach((function(e){return e.setFilterFrequency(t,n)}))},e.setFilterDetune=function(t,n){return e.voices.forEach((function(e){return e.setFilterDetune(t,n)}))},e.setFilterQ=function(t,n){return e.voices.forEach((function(e){return e.setFilterQ(t,n)}))},e.setFilterGain=function(t,n){return e.voices.forEach((function(e){return e.setFilterGain(t,n)}))},e.setFilterType=function(t){return e.voices.forEach((function(e){return e.setFilterType(t)}))},e.setFilterAttack=function(t){return e.voices.forEach((function(e){return e.setFilterAttack(t)}))},e.setFilterDecay=function(t){return e.voices.forEach((function(e){return e.setFilterDecay(t)}))},e.setFilterSustain=function(t){return e.voices.forEach((function(e){return e.setFilterSustain(t)}))},e.setFilterRelease=function(t){return e.voices.forEach((function(e){return e.setFilterRelease(t)}))},e.setFilterAmount=function(t){return e.voices.forEach((function(e){return e.setFilterAmount(t)}))},e.noteOn=function(t){if(Array.isArray(t))t.forEach((function(t){return e.noteOn(t)}));else{if(e.voices[e.voicePos].getCurrentNote()){var n=e.voicePos;for(e._incrementVoicePos();e.voicePos!==n&&e.voices[e.voicePos].currentNote;)e._incrementVoicePos();e._voiceNoteOn(e.voices[e.voicePos],t)}else e._voiceNoteOn(e.voices[e.voicePos],t);e._incrementVoicePos()}},e.noteOff=function(t){return t?Array.isArray(t)?t.forEach((function(t){return e.noteOff(t)})):void e.voices.filter((function(e){return e.getCurrentNote()===t})).forEach((function(n){return e._voiceNoteOff(n,t)})):e.voices.forEach((function(t){return e._voiceNoteOff(t)}))},e.noteStop=function(t){return t?Array.isArray(t)?t.forEach((function(t){return e.noteStop(t)})):void e.voices.filter((function(e){return e.getCurrentNote()===t})).forEach((function(t){return e._voiceNoteStop(t)})):e.voices.forEach((function(t){return e._voiceNoteStop(t)}))},e._resetVoicePos=function(){return e.voicePos=0},e._incrementVoicePos=function(){return e.voicePos=(e.voicePos+1)%e.polyphony},e._voiceNoteOn=function(t,e){return t.noteOn(e)},e._voiceNoteOff=function(t,e){return t.noteOff(e)},e._voiceNoteStop=function(t){return t.noteStop()},e.name="PolySynth",e.voices=Array(8).fill(0).map((function(t){return new bo(e.AC)})),e.limiter=new We(e.AC),e.polyphony=8,e.voicePos=0,e.params={frequency:e.voices.map((function(t){return t.getParams().frequency})),detune:e.voices.map((function(t){return t.getParams().detune})),gain:e.voices.map((function(t){return t.getParams().gain})),filterFrequency:e.voices.map((function(t){return t.getParams().filterFrequency})),filterQ:e.voices.map((function(t){return t.getParams().filterQ})),filterDetune:e.voices.map((function(t){return t.getParams().filterDetune})),filterGain:e.voices.map((function(t){return t.getParams().filterGain}))};var A=Oo(Oo({},vo),n);return e.setPolyphony(A.polyphony),e.voices.forEach((function(t){t.setWaveform(A.waveform),t.setFrequency(A.frequency),t.setDetune(A.detune),t.setGainAttack(A.gainAttack),t.setGainDecay(A.gainDecay),t.setGainSustain(A.gainSustain),t.setGainRelease(A.gainRelease),t.setGainAmount(A.gainAmount),t.setFilterType(A.filterType),t.setFilterFrequency(A.filterFrequency),t.setFilterQ(A.filterQ),t.setFilterDetune(A.filterDetune),t.setFilterGain(A.filterGain),t.setFilterAttack(A.filterAttack),t.setFilterDecay(A.filterDecay),t.setFilterSustain(A.filterSustain),t.setFilterRelease(A.filterRelease),t.setFilterAmount(A.filterAmount),t.connect(e.limiter)})),e}return o}(o);function Do(t){return(Do="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ro(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Fo(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Ro(Object(n),!0).forEach((function(e){Mo(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ro(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Mo(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function jo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Bo(t,e){return(Bo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Po(t,e){return!e||"object"!==Do(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Jo(t){return(Jo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Go={modulatorFrequency:440,modulatorDetune:0,modulatorDepth:440,carrierFrequency:440,carrierDetune:0,gainAttack:0,gainDecay:0,gainSustain:1,gainRelease:0,gainAmount:.75};const Ko=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Bo(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=Jo(e);if(n){var o=Jo(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Po(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};jo(this,o),(e=r.call(this,t)).getOutputs=function(){return[e.carrier]},e.getModulatorFrequency=function(){return e.params.modulatorFrequency.value},e.getModulatorDetune=function(){return e.params.modulatorDetune.value},e.getModulatorDepth=function(){return e.params.modulatorDepth.value},e.getCarrierFrequency=function(){return e.params.carrierFrequency.value},e.getCarrierDetune=function(){return e.params.carrierDetune.value},e.getGainAttack=function(){return e.carrier.getGainAttack()},e.getGainDecay=function(){return e.carrier.getGainDecay()},e.getGainSustain=function(){return e.carrier.getGainSustain()},e.getGainRelease=function(){return e.carrier.getGainRelease()},e.getGainAmount=function(){return e.carrier.getGainAmount()},e.setModulatorFrequency=function(t,n){return e.modulator.setFrequency(t,n)},e.setModulatorDetune=function(t,n){return e.modulator.setDetune(t,n)},e.setModulatorDepth=function(t,n){return e.modulator.setGain(t,n)},e.setCarrierFrequency=function(t,n){return e.carrier.setFrequency(t,n)},e.setCarrierDetune=function(t,n){return e.carrier.setDetune(t,n)},e.setGainAttack=function(t){return e.carrier.setGainAttack(t)},e.setGainDecay=function(t){return e.carrier.setGainDecay(t)},e.setGainSustain=function(t){return e.carrier.setGainSustain(t)},e.setGainRelease=function(t){return e.carrier.setGainRelease(t)},e.setGainAmount=function(t){return e.carrier.setGainAmount(t)},e.noteOn=function(t){return e.carrier.noteOn(t)},e.noteOff=function(t){return e.carrier.noteOff(t)},e.noteStop=function(){return e.carrier.noteStop()},e.name="SimpleFMSynth",e.modulator=new Tr(e.AC),e.carrier=new io(e.AC),e.params={modulatorFrequency:e.modulator.getParams().frequency,modulatorDetune:e.modulator.getParams().detune,modulatorDepth:e.modulator.getParams().gain,carrierFrequency:e.carrier.getParams().frequency,carrierDetune:e.carrier.getParams().detune,carrierGain:e.carrier.getParams().gain};var A=Fo(Fo({},Go),n);return e.setModulatorFrequency(A.modulatorFrequency),e.setModulatorDetune(A.modulatorDetune),e.setModulatorDepth(A.modulatorDepth),e.setCarrierFrequency(A.carrierFrequency),e.setCarrierDetune(A.carrierDetune),e.setGainAttack(A.gainAttack),e.setGainDecay(A.gainDecay),e.setGainSustain(A.gainSustain),e.setGainRelease(A.gainRelease),e.setGainAmount(A.gainAmount),e.modulator.connect(e.params.carrierFrequency),e}return o}(o);function To(t){return(To="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Uo(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function qo(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Uo(Object(n),!0).forEach((function(e){Vo(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Uo(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Vo(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Yo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Wo(t,e){return(Wo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Zo(t,e){return!e||"object"!==To(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function No(t){return(No=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var xo={buffer:null,loop:!1,detune:0,playbackRate:1,start:!1};const Lo=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Wo(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=No(e);if(n){var o=No(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return Zo(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Yo(this,o),(e=r.call(this,t)).start=function(){return e.bufferSource.start()},e.stop=function(){return e.bufferSource.stop()},e.getInputs=function(){return[e.bufferSource]},e.getOutputs=function(){return[e.bufferSource]},e.getBuffer=function(){return e.bufferSource.buffer},e.getLoop=function(){return e.bufferSource.loop},e.getDetune=function(){return e.params.detune.value},e.getPlaybackRate=function(){return e.params.playbackRate.value},e.setBuffer=function(t){return e.bufferSource.buffer=t},e.setLoop=function(t){return e.bufferSource.loop=t},e.setDetune=function(t,n){return e._timeUpdate(e.params.detune,t,n)},e.setPlaybackRate=function(t,n){return e._timeUpdate(e.params.playbackRate,t,n)},e.name="BufferSource",e.bufferSource=e.AC.createBufferSource(),e.params={detune:e.bufferSource.detune,playbackRate:e.bufferSource.playbackRate};var A=qo(qo({},xo),n);return e.setBuffer(A.buffer),e.setLoop(A.loop),e.setDetune(A.detune),e.setPlaybackRate(A.playbackRate),A.start&&e.start(),e}return o}(o);function Ho(t){return(Ho="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function zo(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Xo(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?zo(Object(n),!0).forEach((function(e){_o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):zo(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function _o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function $o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function tA(t,e){return(tA=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function eA(t,e){return!e||"object"!==Ho(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function nA(t){return(nA=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var rA=function(t){var e=2*t.sampleRate;return t.createBuffer(1,e,t.sampleRate)},oA={white:function(t){for(var e=t.getChannelData(0),n=0;n<e.length;n++)e[n]=2*Math.random()-1;return t},pink:function(t){var e,n,r,o,A,c,i,u=t.getChannelData(0);e=n=r=o=A=c=i=0;for(var a=0;a<u.length;a++){var f=2*Math.random()-1;e=.99886*e+.0555179*f,n=.99332*n+.0750759*f,r=.969*r+.153852*f,o=.8665*o+.3104856*f,A=.55*A+.5329522*f,c=-.7616*c-.016898*f,u[a]=.11*(e+n+r+o+A+c+i+.5362*f),i=.115926*f}return t},brown:function(t){for(var e=t.getChannelData(0),n=0,r=0;r<e.length;r++){var o=2*Math.random()-1;e[r]=4*(n+.02*o)/1.02,n=e[r]/4}return t}},AA={type:"white",start:!1};const cA=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&tA(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=nA(e);if(n){var o=nA(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return eA(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};$o(this,o),(e=r.call(this,t)).start=function(){return e.bufferSource.start()},e.stop=function(){return e.bufferSource.stop()},e.getOutputs=function(){return[e.bufferSource]},e.getType=function(){return e.type},e.setType=function(t){if(v.includes(t))if(e.type=t,e.bufferSource.getBuffer())oA[e.params.type](e.bufferSource.getBuffer());else{var n=rA(e.AC);e.bufferSource.setBuffer(oA[e.params.type](n))}},e.name="NoiseGenerator",e.bufferSource=new Lo(e.AC,{loop:!0}),e.type="white",e.params={};var A=Xo(Xo({},AA),n);return e.setType(A.type),A.start&&e.start(),e}return o}(o);function iA(t){return(iA="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function uA(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function aA(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?uA(Object(n),!0).forEach((function(e){fA(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):uA(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function fA(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function sA(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function lA(t,e){return(lA=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function pA(t,e){return!e||"object"!==iA(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function yA(t){return(yA=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var gA={gain:1,start:!1};const hA=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&lA(t,e)}(o,t);var e,n,r=(e=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=yA(e);if(n){var o=yA(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return pA(this,t)});function o(t){var e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};sA(this,o),(e=r.call(this,t)).start=function(){return e.osc.start()},e.stop=function(){return e.osc.stop()},e.getOutputs=function(){return[e.gain]},e.getGain=function(){return e.params.gain.value},e.setGain=function(t,n){return e.gain.setGain(t,n)},e.name="SignalGenerator",e.osc=new tn(e.AC),e.gain=new mt(e.AC),e.waveshaper=new Be(e.AC,{curve:new Float32Array(44100).fill(1)}),e.params={gain:e.gain.getParams().gain};var A=aA(aA({},gA),n);return e.setGain(A.gain),e.osc.connect(e.waveshaper),e.waveshaper.connect(e.gain),A.start&&e.start(),e}return o}(o);function bA(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function mA(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?bA(Object(n),!0).forEach((function(e){EA(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):bA(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function EA(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function OA(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var wA={octave:4,velocity:127,onPress:function(){},onRelease:function(){}};const SA=function t(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};OA(this,t),this.on=function(){window.addEventListener("keydown",e._keydown),window.addEventListener("keyup",e._keyup)},this.off=function(){window.removeEventListener("keydown",e._keydown),window.removeEventListener("keyup",e._keyup)},this._keydown=function(t){if(!t.repeat){switch(t.key){case"z":return e._octaveDown();case"x":return e._octaveUp();case"c":return e._velocityDown();case"v":return e._velocityUp()}var n=K(t.key,e.octave);n&&e.onPress(n)}},this._keyup=function(t){var n=K(t.key,e.octave);n&&e.onRelease(n)},this._octaveDown=function(){e.octave>1&&e.octave--},this._octaveUp=function(){e.octave<7&&e.octave++},this._velocityDown=function(){},this._velocityUp=function(){},this.name="Keyboard";var r=mA(mA({},wA),n);this.octave=r.octave,this.velocity=r.octave,this.onPress=r.onPress,this.onRelease=r.onRelease};function IA(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}const CA=function t(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"A4";IA(this,t),this.getNote=function(){return e.note},this.getOctave=function(){return e.octave},this.getFrequency=function(){return e.frequency},this.get=function(t){switch(t){case"note":return e.note;case"octave":return e.octave;case"frequency":return e.frequency;default:return"".concat(e.note).concat(e.octave)}},this.set=function(t){var n="number"==typeof t?T(t):t,r=G(n);if(!r)return console.error("Invalid note value");e.note=r.note,e.octave=r.octave,e._updateMidi(),e._updateFrequency()},this.setNote=function(t){e.note=t,e._updateMidi(),e._updateFrequency()},this.setOctave=function(t){e.octave=R(t,0,9),e._updateMidi(),e._updateFrequency()},this.transpose=function(t){if(0!==t){var n=U(e.get());e.set(R(n+t,12,120))}},this._updateFrequency=function(){return e.frequency=q("".concat(e.note).concat(e.octave))},this._updateMidi=function(){return e.midi=U("".concat(e.note).concat(e.octave))},this.set(n)},kA=n;return e})()}));